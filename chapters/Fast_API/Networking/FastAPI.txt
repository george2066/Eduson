Микрофреймворк на PYthon для разработки API 

Он состоит из двух фреймворков:
Starlett -- минифреймворк для ассинхронного бекенда
Pydantic -- длч валидации

Создан в 2018, активно используется с 2021 с появлением ассинхронности.

Программы, написанные на фастапи, быстрые и производительные

У него есть валидация данных, сериализация и ассинхронность. Он позволяет создавать ассинхронные приложения без дополнительный библиотек.

Третий по популярности фреймворк.

В общем фастапи нужен для ассинхронности. То есть нам нужно отслеживать 10 000 курьеров сразу. Тогда нам нужен фастапи. Копроративная многозадачность. Так же для соц-сетей
Пайдентик отвечает за сквозной контроль типов данных, то есть если на вход идёт словарь, а не список, то пайдентик выбрасывает сам исключение, то есть скорость разработки увеличивается на 40%.

Пайдентик добавляет к объекту класс, в котором можно явно указать типы данных, которые должны использоваться для конкретного объекта.

Как у спринга у фастапи есть депенденси инжекшон

Создать виртуальную среду
virtualenv  venv -p python3
source venv/bin/activate








